@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&family=Lato:wght@300&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');
@import url("https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css");

*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

label {

}

input {
    font: inherit;
    border: none;
    outline: none;
}

textarea {
    resize: none;
}

button {
    border: none;
    background: initial;
    outline: none;  /* ---- don`t forget indicator for focus state. ---- */
}

ul {
    list-style: none;
}

a {
    color: inherit;
    text-decoration: none;
    outline: none;
}


html {
    /*
     * 100% is 16px if font size is set to the default value;
     * 62.5% of 16px is 10px, so 1rem = 10px.
     */
     font-size: 62.5%;
     scroll-behavior: smooth;
}

.page {
    font-family: 'Inter', sans-serif;
    /* font-family: 'Lato', sans-serif; */
    /* font-family: 'Roboto', sans-serif; */
    font-size: 1.4rem;
    background: rgb(20, 189, 172);

    scrollbar-width: none;
}

.page:-webkit-scrollbar {
    display: none;
}

.page__app {
    height: 100vh;
    height: 100dvh;

    display: grid;
    grid-template-rows: 1fr auto
}

button[type="button"] {
    cursor: pointer;
}

.main-content {
    grid-column: 1 / 2;
    padding-top: 6.5rem;
}

.game {
    display: grid;
    grid-template-rows: auto 1fr;
}

.game__content {

}

.game-wrapper {
    grid-row: 1 / 2;

    min-height: 6.5rem;
    display: flex;
    align-items: center;
    gap: 1rem;
    width: 100%;
    max-width: 40rem;
    margin: 0 auto;
    background: rgb(32, 33, 36);
    color: rgba(255, 255, 255, 1);
    border-top-right-radius: .8rem;
    border-top-left-radius: .8rem;
    padding: 1.6rem;
}

:where(.game__playerX, .game__playerO) {
    position: relative;
    flex: 1;
    user-select: none;
    border: .1rem solid rgba(255, 255, 255, .15);
    border-bottom: 0;
    padding: 1.6rem;
    border-radius: .6rem;
    font-size: 2.8rem;
    font-weight: 800;
}

.game__playerX {
    
}

.game__playerO {

}

.game__playerX::after,
.game__playerO::after {
    content: '';
    height: .6rem;
    width: 100%;
    background: rgb(20, 189, 172);
    position: absolute;
    left: 0;
    bottom: 0;
    opacity: 0;
    transition: all .2s;
}

.game__playerX.active::after,
.game__playerO.active::after {
    opacity: 1;
}

.game-board {
    grid-row: 2 / 3;

    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    width: 100%;
    max-width: 40rem;
    height: 100%;
    max-height: 40rem;
    margin: 0 auto;
}

.game-board__item {
    border: .5rem solid rgba(0, 0, 0, .5);
    position: relative;

    display: grid;
    place-items: center;
}

.game-board__item:first-child,
.game-board__item:nth-child(2),
.game-board__item:nth-child(3) {
    border-top: none;
}

.game-board__item:nth-child(3n + 1) {
    border-left: none;
}

.game-board__item:nth-child(3n + 3) {
    border-right: none;
}

.game-board__item:nth-child(7),
.game-board__item:nth-child(8),
.game-board__item:last-child {
    border-bottom: none;
}

.game-board__item.x::before,
.game-board__item.x::after {
    --mark-sz: calc(8rem * .9);

    content: '';
    width: calc(var(--mark-sz) * .15);
    height: var(--mark-sz);
    background: rgba(0, 0, 0, .85);
    position: absolute;
    border-radius: .6rem;
}

.game-board__item.x::before {
    transform: rotate(45deg);
}

.game-board__item.x::after {
    transform: rotate(-45deg);
}

.game-board__item.o::before,
.game-board__item.o::after {
    --mark-sz: calc(8rem * .9);

    content: '';
    position: absolute;
    border-radius: 50%;
}

.game-board__item.o::before {
    width: var(--mark-sz);
    height: var(--mark-sz);
    background: rgba(0, 0, 0, .85);
}

.game-board__item.o::after {
    width: calc(var(--mark-sz) * .7);
    height: calc(var(--mark-sz) * .7);
    background: rgb(20, 189, 172);
}

.winner {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    justify-content: center;
    background: rgba(20, 189, 172, .5);
    visibility: hidden;
    /* transition: all .4s; */
}

.winner.show {
    visibility: visible;
}

.winner__content {
    display: flex;
    flex-direction: column;
    padding-top: 13.5rem;
}

:where(.winner__message, .winner__description) {
    display: block;
    font-weight: 800;
    text-align: center;
}

.winner__message {
    font-size: 8.2rem;
}

.winner__description {
    font-size: 4.2rem;
}

.winner__btn {
    background: rgba(0, 0, 0, .75);
    color: rgba(255, 255, 255, .75);
    padding: .6em .8em;
    border-radius: .6rem;
}

.winner__btn:hover {
    background: rgba(0, 0, 0, 1);
    color: rgba(255, 255, 255, .85);
}

.footer {
    grid-row: 2 / 3;
    
    min-height: 6.5rem;
    display: grid;
    place-items: center;
}

/* ----- components ----- */
.btn {

}

/* ----- utilities ----- */
.content-grid {
    --padding-inline: 1.6rem;
    --content-max-width: 90rem;
    --breakout-max-width: 120rem;
  
    --breakout-size: calc(
        (var(--breakout-max-width) - var(--content-max-width)) / 2
    );
  
    display: grid;
    grid-template-columns:
        [full-width-start] minmax(var(--padding-inline), 1fr)
        [breakout-start] minmax(0, var(--breakout-size))
        [content-start] min(
            100% - (var(--padding-inline) * 2),
            var(--content-max-width)
        )
        [content-end]
        minmax(0, var(--breakout-size)) [breakout-end]
        minmax(var(--padding-inline), 1fr) [full-width-end];
}

.content-grid > :not(.breakout, .full-width),
.full-width > :not(.breakout, .full-width) {
    grid-column: content;
}

.content-grid > .breakout {
    grid-column: breakout;
}

.content-grid > .full-width {
    grid-column: full-width;

    display: grid;
    grid-template-columns: inherit;
}
